[[plugins]]
repo = "nvim-treesitter/nvim-treesitter"
hook_post_update = "TSUpdate"
on_event = "CursorHold"
lua_add = '''
	-- Vimdocの無効化
	vim.treesitter.start = (function(wrapped)
		return function(bufnr, lang)
			lang = lang or vim.fn.getbufvar(bufnr or '', '&filetype')
			if lang == 'help' then
				return
			end
			wrapped(bufnr, lang)
		end
	end)(vim.treesitter.start)
'''
lua_source = '''
	-- markdown treesitter のPluginの有効化
	vim.fn.setenv("EXTENSION_WIKI_LINK", 1)

	-- satysfiサーバのセットアップ
	local parser_config = require "nvim-treesitter.parsers".get_parser_configs()
	parser_config.satysfi = {
		install_info = {
			url = "https://github.com/monaqa/tree-sitter-satysfi",
			files = { "src/parser.c", "src/scanner.c" }
		},
		filetype = "satysfi",
	}

	local parser_install_dir = vim.fn.stdpath("data") .. "/treesitter"
	vim.opt.runtimepath:append(vim.fn.stdpath("data") .. "/treesitter")
	require("nvim-treesitter.configs").setup({
		parser_install_dir = parser_install_dir,
		highlight = {
			enable = true,
			additional_vim_regex_highlighting = { 'org', 'markdown' },
			disable = { 'vimdoc' },
		},
		indent = {
			enable = true,
			disable = { 'dart', 'vimdoc' },
		},
		auto_install = true,
		ensure_installed = { 'org', 'query', 'satysfi', 'markdown', 'lua', 'vim' },
	})
	-- vim.api.nvim_create_autocmd("BufRead", {
	-- command = "TSEnable highlight",
	-- })
'''

[[plugins]]
repo = "nvim-treesitter/nvim-treesitter-context"
depends = "nvim-treesitter"
on_source = "nvim-treesitter"
lua_source = '''
	require 'treesitter-context'.setup {
		line_numbers = true,
		mode = 'topline',
		separator = '~'
	}
'''

[[plugins]]
repo = "https://gitlab.com/HiPhish/rainbow-delimiters.nvim"
depends = "nvim-treesitter"
on_source = "nvim-treesitter"
if = false

[[plugins]]
repo = "Wansmer/treesj"
depends = "nvim-treesitter"
on_cmd = "TSJToggle"
lua_add = "vim.keymap.set('n', 'J', '<cmd>TSJToggle<cr>')"
lua_source = '''
	require 'treesj'.setup {
		use_default_keymaps = false, max_join_length = 150	
	}
'''

[[plugins]]
repo = "thinca/vim-partedit"
hook_source = '''
	let g:partedit#prefix_pattern = '\v^\s*'
'''
[[plugins]]
repo = "monaqa/nvim-treesitter-clipping"
on_map = "<Plug>(ts-clipping-clip)"
lua_add = "vim.keymap.set('n', 'cx', '<Plug>(ts-clipping-clip)')"
depends = ["nvim-treesitter", "vim-partedit"]

[[plugins]]
repo = "lukas-reineke/indent-blankline.nvim"
on_source = "nvim-treesitter"
lua_source = '''
	require 'ibl'.setup ()
'''

[[plugins]]
repo = "stevearc/aerial.nvim"
on_source = "nvim-treesitter"
lua_source = '''
require "aerial".setup {
	on_attach = function(bufnr)
		vim.keymap.set("n", "{", "<cmd>AerialPrev<CR>", { buffer = bufnr })
		vim.keymap.set("n", "}", "<cmd>AerialNext<CR>", { buffer = bufnr })
	end,
}
vim.keymap.set("n", "<leader>A", "<cmd>AerialToggle!<CR>")
'''
