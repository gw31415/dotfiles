[[plugins]]
repo = "nvim-treesitter/nvim-treesitter"
hook_post_update = "TSUpdate"
on_event = "CursorHold"
lua_add = '''
-- Vimdocの無効化
vim.treesitter.start = (function(wrapped)
	return function(bufnr, lang)
		lang = lang or vim.fn.getbufvar(bufnr or '', '&filetype')
		if lang == 'help' then
			return
		end
		wrapped(bufnr, lang)
	end
end)(vim.treesitter.start)
'''
lua_source = '''
-- markdown treesitter のPluginの有効化
vim.fn.setenv('EXTENSION_WIKI_LINK', 1)

local parser_install_dir = vim.fn.stdpath 'data' .. '/treesitter'
vim.opt.runtimepath:append(parser_install_dir)
require 'nvim-treesitter.configs'.setup {
	sync_install = false,
	ignore_install = {},
	modules = {},
	parser_install_dir = parser_install_dir,
	highlight = {
		enable = true,
		additional_vim_regex_highlighting = { 'markdown', 'edisch' },
		disable = { 'vimdoc' },
	},
	indent = {
		enable = true,
		disable = { 'dart', 'vimdoc' },
	},
	auto_install = true,
	ensure_installed = { 'query', 'markdown', 'markdown_inline', 'lua', 'vim' },
}
'''

# TODO: NixでColorSchemeを設定した際、こちらのプラグインが反映されない
[[plugins]]
repo = "https://gitlab.com/HiPhish/rainbow-delimiters.nvim"
depends = "nvim-treesitter"
on_source = "nvim-treesitter"

[[plugins]]
repo = "Wansmer/treesj"
depends = "nvim-treesitter"
on_cmd = "TSJToggle"
lua_add = "vim.keymap.set('n', 'J', '<cmd>TSJToggle<cr>')"
lua_source = '''
require 'treesj'.setup {
	use_default_keymaps = false, max_join_length = 150
}
'''

[[plugins]]
repo = "thinca/vim-partedit"
hook_source = '''
	let g:partedit#prefix_pattern = '\v^\s*'
'''
[[plugins]]
repo = "monaqa/nvim-treesitter-clipping"
on_map = "<Plug>(ts-clipping-clip)"
lua_add = "vim.keymap.set('n', 'cx', '<Plug>(ts-clipping-clip)')"
depends = ["nvim-treesitter", "vim-partedit"]

[[plugins]]
repo = "lukas-reineke/indent-blankline.nvim"
on_source = "nvim-treesitter"
lua_source = '''
	require 'ibl'.setup()
'''

[[plugins]]
repo = "RRethy/nvim-treesitter-textsubjects"
on_source = "nvim-treesitter"
depends = "nvim-treesitter"
lua_source = '''
require 'nvim-treesitter-textsubjects'.configure {
	prev_selection = ',',
	keymaps = {
		['.'] = 'textsubjects-smart',
		['a.'] = 'textsubjects-container-outer',
		['i.'] = 'textsubjects-container-inner',
	},
}
'''

[[plugins]]
repo = "stevearc/aerial.nvim"
on_source = "nvim-treesitter"
lua_source = '''
require 'aerial'.setup {
	on_attach = function(bufnr)
		vim.keymap.set('n', '{', '<cmd>AerialPrev<CR>', { buffer = bufnr })
		vim.keymap.set('n', '}', '<cmd>AerialNext<CR>', { buffer = bufnr })
	end,
}
vim.keymap.set('n', '<leader>A', '<cmd>AerialToggle!<CR>')
'''
