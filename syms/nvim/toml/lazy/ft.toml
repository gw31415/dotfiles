[[plugins]]
repo = "ogaken-1/nvim-gin-preview"
on_ft = "gin-status"

[[plugins]]
repo = "akinsho/org-bullets.nvim"
lua_source = '''
require 'org-bullets'.setup {
	symbols = {
		headlines = {
			'◉', '◊', '▹',
			'◉', '◊', '▹',
			'◉', '◊', '▹',
			'◉', '◊', '▹',
		}
	},
}
'''
[[plugins]]
repo = "danilshvalov/org-modern.nvim"
[[plugins]]
repo = "nvim-orgmode/orgmode"
on_ft = "org"
on_event = "CursorHold"
depends = ["org-bullets.nvim", "vim-repeat", "org-modern.nvim"]
lua_source = '''
local Menu = require 'org-modern.menu'
vim.keymap.set('n', '<Leader>o', '<Nop>', {})
require 'orgmode'.setup {
	mappings = {
		disable_all = false,
	},
	ui = {
		menu = {
			handler = function(data)
				Menu:new {
					window = {
						margin = { 1, 0, 1, 0 },
						padding = { 0, 1, 0, 1 },
						title_pos = 'center',
						border = 'single',
						zindex = 1000,
					},
					icons = {
						separator = '➜',
					},
				}:open(data)
			end,
		},
	},
	org_agenda_files = { '~/iCloud_Drive/org/*' },
	org_default_notes_file = '~/iCloud_Drive/org/refile.org',
	org_capture_templates = {
		n = {
			description = 'Default Note',
			template = '* %?\n %U',
		},
		t = {
			description = 'Task',
			template = '* TODO %?\n  %u',
			target = '~/iCloud_Drive/org/tasks.org',
		},
	},
}
'''

[[plugins]]
repo = "iamcco/markdown-preview.nvim"
on_ft = ["markdown", "pandoc.markdown", "rmd"]
build = 'sh -c "cd app && npm install"'

[[plugins]]
repo = "MeanderingProgrammer/markdown.nvim"
depends = "nvim-treesitter"
on_ft = "markdown"
lua_source = "require 'render-markdown'.setup {}"

[[plugins]]
repo = "folke/ts-comments.nvim"
on_event = "CursorHold"
lua_source = '''
require 'ts-comments'.setup()
'''

[[plugins]]
repo = "akinsho/flutter-tools.nvim"
on_ft = "dart"
depends = ["plenary.nvim"]
lua_source = '''
require 'flutter-tools'.setup {
	flutter_lookup_cmd = 'mise where flutter',
	lsp = {
		color = {
			enabled = true,
			virtual_text = true,
		}
	},
}
'''

[[plugins]]
repo = "mrcjkb/rustaceanvim"
on_ft = "rust"

[[plugins]]
repo = "tranvansang/octave.vim"
on_ft = ["matlab", "octave"]

[[plugins]]
repo = "mattn/emmet-vim"
on_ft = ["html", "jsx", "tsx", "astro"]

[[plugins]]
repo = "saecki/crates.nvim"
rev = "stable"
depends = "plenary.nvim"
on_ft = "toml"
lua_source = "require 'crates'.setup()"

[[plugins]]
repo = "rest-nvim/rest.nvim"
on_ft = "http"
depends = "plenary.nvim"
hook_add = '''
autocmd BufEnter *.http call s:set_rest_keymap()
function! s:set_rest_keymap()
	setl ft=http
	nn <buffer> <C-m> <Plug>RestNvim
endfunction
'''
lua_source = '''
require 'rest-nvim'.setup {
	result_split_horizontal = false,
}
'''

# For nushell Treesitter
[[plugins]]
repo = "LhKipp/nvim-nu"
on_ft = "nu"
depends = "nvim-treesitter"
lua_source = '''
require'nu'.setup{
	use_lsp_features = false,
}
'''

[[plugins]]
repo = "ixru/nvim-markdown"
on_ft = "markdown"
hook_source = "let g:vim_markdown_no_default_key_mappings = 1"

[ftplugin]
erg = "setl et"
python = '''
let s:venv = finddir('.venv/..', expand('%:p:h').';')
if s:venv != ''
	let s:venv = s:venv . '/.venv/bin/python'
	" exe $"autocmd InsertEnter <buffer> ++once PyrightSetPythonPath {s:venv}/.venv/bin/python"
endif
'''
typst = '''
setl commentstring=//\ %s
setl shiftwidth=2
setl tabstop=2
setl expandtab
'''
